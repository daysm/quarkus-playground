name: Main
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-test-build:
    name: Lint, Test, Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.3
      - name: Check Terraform formatting
        run: terraform fmt -check -recursive
      - name: Run ktlintCheck
        run: ./gradlew ktlintCheck
      - name: Log in to Docker Hub # necessary to increase rate limits for pulling images during test
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      - name: Run tests
        run: ./gradlew test
      - name: Build application
        run: ./gradlew build
      - name: Build Docker image
        run: |
          docker build -t app:${{ github.sha }} -f src/main/docker/Dockerfile.jvm .
      - name: Export Docker image
        run: docker save app:${{ github.sha }} > docker-image.tar
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: docker-image.tar

  push-to-dev:
    name: Push image (dev)
    needs: [ lint-test-build ]
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker image
        run: docker load < docker-image.tar

      - name: Authenticate to Google Cloud via Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          project_id: ${{ vars.GCP_PROJECT_ID }}
          workload_identity_provider: "projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/gh-actions-identity-pool-dev/providers/github-provider-dev"
          service_account: "github-sa-dev@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com"
          audience: "https://iam.googleapis.com/projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/gh-actions-identity-pool-dev/providers/github-provider-dev"

      - name: Configure Docker to use gcloud as a credential helper
        run: |
          gcloud auth configure-docker ${{ vars.GCP_REGION }}-docker.pkg.dev

      - name: Push Docker image to Artifact Registry (dev)
        run: |
          IMAGE_URI="${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/images-dev/app"
          docker tag "app:${{ github.sha }}" "$IMAGE_URI:${{ github.sha }}"
          docker push "$IMAGE_URI:${{ github.sha }}"
          
          docker tag "$IMAGE_URI:${{ github.sha }}" "$IMAGE_URI:latest"
          docker push "$IMAGE_URI:latest"

  terraform-plan-dev:
    name: Terraform plan (dev)
    needs: push-to-dev
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.3
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          project_id: ${{ vars.GCP_PROJECT_ID }}
          workload_identity_provider: "projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/gh-actions-identity-pool-dev/providers/github-provider-dev"
          service_account: "github-sa-dev@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com"
          audience: "https://iam.googleapis.com/projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/gh-actions-identity-pool-dev/providers/github-provider-dev"
      - name: Initialize Terraform
        working-directory: ./infrastructure
        run: |
          terraform init -backend-config="bucket=terraform-state-xfb0phm2" -backend-config="prefix=quarkus-playground"
      - name: Select workspace (dev)
        working-directory: ./infrastructure
        run: |
          terraform workspace select dev
      - name: Run terraform plan
        working-directory: ./infrastructure
        id: plan
        run: |
          terraform plan -var-file=vars/dev.tfvars -var="image_tag=${{ github.sha }}" -out=tfplan
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-dev
          path: ./infrastructure/tfplan

  # On PRs, this job requires approval due to the environment protection rules of the dev-pr environment.
  # Once approved, the following jobs to deploy to dev are run without additional approval.
  approve-deployment-dev:
    name: Approve deployment (dev)
    needs: terraform-plan-dev
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'pull_request' && 'dev-pr' || 'dev' }}
    steps:
      - name: Approval granted
        run: echo 'Approval granted to deploy to Dev from PR.'

  run-flyway-dev:
    name: Run flyway migrations (dev)
    needs: approve-deployment-dev
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Run Flyway migrations (dev)
        run: |
          docker run --rm \
            -v $(pwd)/src/main/resources/db/migration:/flyway/sql \
            flyway/flyway migrate \
              -url="${{ secrets.DB_URL }}" \
              -user="${{ secrets.DB_USER }}" \
              -password="${{ secrets.DB_PASSWORD }}"

  terraform-apply-dev:
    name: Terraform apply (dev)
    needs: run-flyway-dev
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.3
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          project_id: ${{ vars.GCP_PROJECT_ID }}
          workload_identity_provider: "projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/gh-actions-identity-pool-dev/providers/github-provider-dev"
          service_account: "github-sa-dev@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com"
          audience: "https://iam.googleapis.com/projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/gh-actions-identity-pool-dev/providers/github-provider-dev"
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan-dev
          path: ./infrastructure
      - name: Initialize Terraform
        working-directory: ./infrastructure
        run: |
          terraform init -backend-config="bucket=terraform-state-xfb0phm2" -backend-config="prefix=quarkus-playground"
      - name: Select workspace (dev)
        working-directory: ./infrastructure
        run: |
          terraform workspace select dev
      - name: Terraform Apply
        working-directory: ./infrastructure
        run: |
          terraform apply -auto-approve tfplan

  push-to-prod:
    name: Push image (prod)
    needs: terraform-apply-dev
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      id-token: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Load Docker image
        run: docker load < docker-image.tar

      - name: Authenticate to Google Cloud via Workload Identity Federation
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          project_id: ${{ vars.GCP_PROJECT_ID }}
          workload_identity_provider: "projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/gh-actions-identity-pool-prod/providers/github-provider-prod"
          service_account: "github-sa-prod@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com"
          audience: "https://iam.googleapis.com/projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/gh-actions-identity-pool-prod/providers/github-provider-prod"

      - name: Configure Docker to use gcloud as a credential helper
        run: |
          gcloud auth configure-docker ${{ vars.GCP_REGION }}-docker.pkg.dev

      - name: Push Docker image to Artifact Registry (prod)
        run: |
          IMAGE_URI="${{ vars.GCP_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/images-prod/app"
          docker tag "app:${{ github.sha }}" "$IMAGE_URI:${{ github.sha }}"
          docker push "$IMAGE_URI:${{ github.sha }}"
          
          docker tag "$IMAGE_URI:${{ github.sha }}" "$IMAGE_URI:latest"
          docker push "$IMAGE_URI:latest"

  run-flyway-prod:
    name: Run flyway migrations (prod)
    needs: push-to-prod
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Run Flyway migrations (prod)
        run: |
          docker run --rm \
            -v $(pwd)/src/main/resources/db/migration:/flyway/sql \
            flyway/flyway migrate \
              -url="${{ secrets.DB_URL }}" \
              -user="${{ secrets.DB_USER }}" \
              -password="${{ secrets.DB_PASSWORD }}"

  terraform-plan-prod:
    name: Terraform plan (prod)
    needs: run-flyway-prod
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: prod
    permissions:
      id-token: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.3
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          project_id: ${{ vars.GCP_PROJECT_ID }}
          workload_identity_provider: "projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/gh-actions-identity-pool-prod/providers/github-provider-prod"
          service_account: "github-sa-prod@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com"
          audience: "https://iam.googleapis.com/projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/gh-actions-identity-pool-prod/providers/github-provider-prod"
      - name: Initialize Terraform
        working-directory: ./infrastructure
        run: |
          terraform init -backend-config="bucket=terraform-state-xfb0phm2" -backend-config="prefix=quarkus-playground"
      - name: Select workspace (prod)
        working-directory: ./infrastructure
        run: |
          terraform workspace select prod
      - name: Run terraform plan
        working-directory: ./infrastructure
        id: plan
        run: |
          terraform plan -var-file=vars/prod.tfvars -var="image_tag=${{ github.sha }}" -out=tfplan
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-prod
          path: ./infrastructure/tfplan

  terraform-apply-prod:
    name: Terraform apply (prod)
    needs: terraform-plan-prod
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: prod
    permissions:
      id-token: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.3
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          project_id: ${{ vars.GCP_PROJECT_ID }}
          workload_identity_provider: "projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/gh-actions-identity-pool-prod/providers/github-provider-prod"
          service_account: "github-sa-prod@${{ vars.GCP_PROJECT_ID }}.iam.gserviceaccount.com"
          audience: "https://iam.googleapis.com/projects/${{ vars.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/gh-actions-identity-pool-prod/providers/github-provider-prod"
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan-prod
          path: ./infrastructure
      - name: Initialize Terraform
        working-directory: ./infrastructure
        run: |
          terraform init -backend-config="bucket=terraform-state-xfb0phm2" -backend-config="prefix=quarkus-playground"
      - name: Select workspace (prod)
        working-directory: ./infrastructure
        run: |
          terraform workspace select prod
      - name: Terraform Apply
        working-directory: ./infrastructure
        run: |
          terraform apply -auto-approve tfplan
