name: Build, Push, and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew build

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          # Build and tag with SHA
          docker build -t ghcr.io/${{ github.repository }}/app:${{ github.sha }} -f src/main/docker/Dockerfile.jvm .
          docker push ghcr.io/${{ github.repository }}/app:${{ github.sha }}
          
          # Tag with latest-dev for PRs
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            docker tag ghcr.io/${{ github.repository }}/app:${{ github.sha }} ghcr.io/${{ github.repository }}/app:latest-dev
            docker push ghcr.io/${{ github.repository }}/app:latest-dev
          fi
          
          # Tag with latest tag for main branch
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            docker tag ghcr.io/${{ github.repository }}/app:${{ github.sha }} ghcr.io/${{ github.repository }}/app:latest
            docker push ghcr.io/${{ github.repository }}/app:latest
          fi

  deploy-dev:
    needs: build-push
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Trigger Coolify Dev Deployment
        run: |
          curl --request GET "${{ secrets.COOLIFY_DEV_WEBHOOK }}" \
            --header "Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}"

  deploy-prod:
    needs: build-push
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Trigger Coolify Prod Deployment
        run: |
          curl --request GET "${{ secrets.COOLIFY_PROD_WEBHOOK }}" \
            --header "Authorization: Bearer ${{ secrets.COOLIFY_TOKEN }}"
